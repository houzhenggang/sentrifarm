# Raspberry Pi sentrifarm initial setup.
#
# Notes:
# To start with, telnet is enabled. In the future turn it off and use ssh.
# 
# Need host web server at $IP/...

# Primary IP is DHCP
# Secondary IP, on same physical port, is used for web server
IP=192.168.168.1
DEBUG_ETH=eth0
MACHINE=raspi
PLATFORM=brcm2708

# Default: eth0 is only network, and is static 192.168.1.1 - kill and replace with DHCP
ifdown lan
uci delete network.lan
uci set network.wan=interface
uci set network.wan.ifname=eth0
uci set network.wan.proto=dhcp
uci commit
ifup wan
sleep 3

uci add firewall rule
uci set firewall.@rule[-1].name='Allow-ssh'
uci set firewall.@rule[-1].proto=tcp
uci set firewall.@rule[-1].src=wan
uci set firewall.@rule[-1].src_dport=22
uci set firewall.@rule[-1].target=ACCEPT

uci add firewall rule
uci set firewall.@rule[-1].name='Allow-mqtt'
uci set firewall.@rule[-1].src=wan
uci set firewall.@rule[-1].proto=udp
uci set firewall.@rule[-1].src_dport=1883
uci set firewall.@rule[-1].target=ACCEPT

uci commit

/etc/init.d/firewall restart

# Add alias ethernet rule
# Note: newfangles way means DHCP not showing up in ifconfig output
uci set network.debug=interface
uci set network.debug.ifname=$DEBUG_ETH
uci set network.debug.proto=static
uci set network.debug.force_link=1
uci set network.debug.ipaddr=192.168.168.2
uci set network.debug.netmask=255.255.255.0
uci commit
/etc/init.d/network restart
ubus list network.interface.*
ifstatus wan
ifstatus debug

# Prepare for additional OpenWRT packages if needed
# wget http://$IP/sentrifarm-bin/files/etc/opkg.conf.sentrifarm  # <-- to update if needed
sed -e 's/@IP@/'$IP'/g' -e 's/@PLATFORM@/'$PLATFORM'/g' < /etc/opkg.conf.sentrifarm.in > /etc/opkg.conf.sentrifarm

# Following should be redundant now
cd /tmp
opkg -f /etc/opkg.conf.sentrifarm update

# FIXME: make the following into OpenWRT packages
mkdir -p /tmp/dl
cd /tmp/dl
wget http://$IP/sentrifarm-bin/build.$MACHINE.rsmb/broker_mqtts
wget http://$IP/sentrifarm-bin/build.$MACHINE.rsmb/broker_mqtt
wget http://$IP/sentrifarm-bin/build.$MACHINE.mqtt-sn/mqtt-sn-pub
wget http://$IP/sentrifarm-bin/build.$MACHINE.mqtt-sn/mqtt-sn-sub
wget http://$IP/sentrifarm-bin/build.$MACHINE.sx1276/sx1276_test1_rx
wget http://$IP/sentrifarm-bin/build.$MACHINE.sx1276/sx1276_test1_tx
wget http://$IP/sentrifarm-bin/build.$MACHINE.sx1276/sx1276_dump_regs
wget http://$IP/sentrifarm-bin/build.$MACHINE.sx1276/sx1276_mqttsn_bridge
chmod +x *

# Note: More than the above doesnt fit into terminal copy/paste

cd /tmp/dl
wget http://$IP/sentrifarm-bin/build.$MACHINE.rsmb/Messages.1.3.0.2
mv -v * /usr/bin
wget http://$IP/sentrifarm-bin/build.$MACHINE.libsocket/C++/libsocket++.so
mv -v * /usr/lib

# The following refreshes files in the image already
# cd /tmp
# wget http://$IP/sentrifarm-bin/files/etc/sentrifarm-rsmb-config.txt
# mv sentrifarm-rsmb-config.txt /etc

# /tmp/dl/broker_mqtts /etc/sentrifarm-rsmb-config.txt
# /tmp/dl/broker_mqtt /etc/sentrifarm-rsmb-config.txt
# /tmp/dl/mqtt-sn-sub -t '#' -v
# LD_LIBRARY_PATH=/tmp/dl /tmp/dl/sx1276_mqttsn_bridge /dev/spidev0.1 connect 1883

# sx1276_mqttsn_bridge /dev/spidev0.1 connect 1883   # <-- may need to restart if broker starts after
# broker_mqtts /etc/sentrifarm-rsmb-config.txt
# mqtt-sn-sub -t '#' -v
#
# On the PC:
# docker run -d -p 9081:81 -p 9080:80 -p 8125:8125/udp -p 8126:8126 -p 2003:2003/udp -p 2003:2003/tcp kamon-grafana-dashboard
# cd software && MQTT_HOST=192.168.168.2 python ext/mqtt2graphite/mqtt2graphite.py data/mqtt2graphite-sf.map
#


# TODO:
# Add -4 option to ntpd via a script
echo "You need to add -4 to /etc/init.d/ntpd script"

cp /99gpio-i2c-rtc.pi /etc/modules.d
echo "Reboot for GPIO and module changes to take effect"

